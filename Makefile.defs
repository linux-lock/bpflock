# SPDX-License-Identifier: Apache-2.0

# Copyright 2021 Djalal Harouni
# Copyright 2017-2020 Authors of Cilium

SHELL := /bin/bash
.SHELLFLAGS := -eu -o pipefail -c

# Organization variables
GIT_ORG ?= linux-lock
DOCKER_ORG ?= linuxlock
REPO ?= bpflock

ROOT_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
RELATIVE_DIR := $(shell echo $(realpath .) | sed "s;$(ROOT_DIR)[/]*;;")

BUILD := $(abspath ./build/)
BUILD_DATE = $(shell date -u +%Y-%m-%dT%H:%M:%SZ)
DIST_DIR := $(abspath ./build/dist/)
DIST_BINDIR := $(abspath ./build/dist/bin)
BUILDLIB := $(abspath ./build/libs/)
DIST_LIBDIR := $(abspath ./build/dist/libs)
BPFTOOL ?= $(abspath ./tools/bpftool)
LIBBPF ?= $(abspath ./src/cc/libbpf/)

INSTALL ?= install
PREFIX ?= /usr/
BINDIR ?= $(PREFIX)bin
LIBDIR ?= $(PREFIX)lib

ARCH := $(shell uname -m | sed 's/x86_64/x86/' | sed 's/aarch64/arm64/')
ifeq ($(ARCH),)
$(error " testError: architecture $(ARCH) is not supported yet. Please open an issue")
endif

# Git and Version
VERSION = $(shell cat $(dir $(lastword $(MAKEFILE_LIST)))/VERSION)
VERSION_MAJOR = $(shell cat $(dir $(lastword $(MAKEFILE_LIST)))/VERSION | cut -d. -f1)
GIT_TAG ?= $(shell git describe --tags --always)
GIT_BRANCH ?= $(shell git rev-parse --abbrev-ref HEAD 2>/dev/null | sed -e "s/[^[:alnum:]]/-/g")
# Git Version
ifneq ($(wildcard $(dir $(lastword $(MAKEFILE_LIST)))/.git),)
    GIT_VERSION = $(shell git rev-parse --short HEAD)
else
    GIT_VERSION = $(GIT_TAG)
endif

FULL_BUILD_VERSION = $(VERSION) $(GIT_VERSION)

# LLVM VERSION
LLVM_VERSION="12"

# Go environment
GO ?= $(shell command -v go 2> /dev/null)

ifdef GO
GOARCH ?= $(shell $(GO) env GOARCH)
GO_BUILD = CGO_ENABLED=0 $(GO) build

ifeq ($(GOARCH),arm64)
    CGO_CC = CC=aarch64-linux-gnu-gcc
endif
GO_BUILD_WITH_CGO = CGO_ENABLED=1 $(CGO_CC) $(GO) build

ifeq ($(NOSTRIP),)
    GO_BUILD_LDFLAGS += -s -w
endif

GOFILES_EVAL := $(subst _$(ROOT_DIR)/,,$(shell $(GO) list -find -e ./...))
GOFILES ?= $(GOFILES_EVAL)
TESTPACKAGES := $(shell go list ./... | grep -v "github.com/linux-lock/bpflock/test/runtime")

GO_BUILD += $(GO_BUILD_FLAGS)
GO_BUILD_WITH_CGO += $(GO_BUILD_FLAGS)

endif

export
